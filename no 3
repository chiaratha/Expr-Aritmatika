/*  Chiara Thalita Diva Permatasari 2057051007
    Thalia Gemi Innaya 2017051025               */


#include <bits/stdc++.h>
using namespace std;

long unsigned int t;

bool Symbol(char a){
    if(a=='*' || a=='/' || a=='+' ||a=='-' || a=='%'){
        return true; 
    }else{    
        return false; 
    }
}

int parse(char a){ 
    if(a=='+' || a=='-'){ 
        return 1; 
    }
    if(a=='*' || a=='/' || a=='%'){ 
        return 2; 
    } 
    return 0;
}

double applyOpr(double satu, double dua, char opr){
    switch(opr){
    case '*': return satu * dua;    
    case '/': return satu / dua; 
    case '+': return satu + dua; 
    case '-': return satu - dua;
    }
return 0;
}

void hasil(string in){
    stack<double> data;
    stack<char>operasi;

    for(t=0; t<in.length(); t++){
        if(isdigit(in[t])){
            int nilai=0;
            while(t<in.length() && isdigit(in[t])){
                nilai = (nilai*10) + (in[t] - '0');
                t++;
            }
            t--;
            data.push(nilai);
        }
            else if(in[t] == '(')
                operasi.push(in[t]);
            else if(in[t] == ')'){
                while(!operasi.empty() && operasi.top() != '('){
                    if(operasi.top() == '%'){
                        int kedua = data.top(); data.pop();
                        int pertama  = data.top(); data.pop();
                        operasi.pop();
                        data.push(pertama %kedua);
                        
                    }else{
                        double kedua = data.top(); data.pop();
                        double pertama  = data.top(); data.pop();
                        char opr = operasi.top(); operasi.pop();
                        data.push(applyOpr(pertama , kedua, opr));
                    }
                }
                
                if(!operasi.empty())
                    operasi.pop();
                    
}else{
                if(in[t] == '-'){
                    if(t==0){
                        if(isdigit(in[t+1])){
                            t++;
                            int nilai=0;
                            while(t<in.length() && isdigit(in[t])){
                                nilai = (nilai*10) + (in[t] - '0');
                                t++;
                            }
                            t--;
                            data.push(nilai*-1);
                        }else{
                            data.push(-1);
                            operasi.push('*');
                        }
                        
                    }else{
                        while(!operasi.empty() && parse(operasi.top()) >= parse(in[t]) && !Symbol(in[t-1])){
                            if(operasi.top() == '%'){
                                int kedua = data.top(); data.pop();
                                int pertama  = data.top(); data.pop();
                                operasi.pop();
                                data.push(pertama %kedua);
                            
                            }else{
                                double kedua = data.top(); data.pop();
                                double pertama  = data.top(); data.pop();
                                char opr = operasi.top(); operasi.pop();
                                data.push(applyOpr(pertama , kedua, opr));
                            }
                        }
                        if((isdigit(in[t+1]) || in[t+1]=='(') && (isdigit(in[t-1]) || in[t-1]==')'))
                            operasi.push(in[t]);
                        
                        else{
                            data.push(-1);
                            operasi.push('*');
                        }
                    } 
                    
                }else{
                    while(!operasi.empty() && parse(operasi.top()) >= parse(in[t])){
                        if(operasi.top() == '%'){
                            int kedua = data.top(); data.pop();
                            int pertama  = data.top(); data.pop();
                            operasi.pop();
                            data.push(pertama %kedua);
                        }else{
                            double kedua = data.top(); data.pop();
                            double pertama  = data.top(); data.pop();
                            char opr = operasi.top(); operasi.pop();
                            data.push(applyOpr(pertama , kedua, opr));
                        }
                    }
                    operasi.push(in[t]);
                }
            }
        }
        
        while(!operasi.empty()){
            if(operasi.top() == '%'){
                int kedua = data.top(); data.pop();
                int pertama  = data.top(); data.pop();
                operasi.pop();
                data.push(pertama %kedua);
         
            }else{
                double kedua = data.top(); data.pop();
                double pertama  = data.top(); data.pop();
                char opr = operasi.top(); operasi.pop();
                data.push(applyOpr(pertama , kedua, opr));
            }
        }
        cout << data.top() << endl;
    }

int main(){
    string ekspresi; getline(cin,ekspresi);
    string baru_ekspresi="";
    for(t=0;t<ekspresi.length();t++){
        if(ekspresi[t]==' ')
            continue;
        else
            baru_ekspresi+=ekspresi[t];
    }
    hasil(baru_ekspresi);

    return 0;
}
